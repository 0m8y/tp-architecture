// <auto-generated />
using System;
using GestionHotel.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionHotel.Infrastructure.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20250617010325_AddReservationRoomRelation")]
    partial class AddReservationRoomRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestionHotel.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsRefunded")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.ReservationRoom", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("char(36)");

                    b.HasKey("ReservationId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("ReservationRooms");
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111101"),
                            Capacity = 1,
                            Condition = 0,
                            Number = "101",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111102"),
                            Capacity = 1,
                            Condition = 0,
                            Number = "102",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111103"),
                            Capacity = 2,
                            Condition = 3,
                            Number = "103",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111104"),
                            Capacity = 2,
                            Condition = 3,
                            Number = "104",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111105"),
                            Capacity = 2,
                            Condition = 1,
                            Number = "105",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111106"),
                            Capacity = 3,
                            Condition = 0,
                            Number = "106",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111107"),
                            Capacity = 3,
                            Condition = 3,
                            Number = "107",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111108"),
                            Capacity = 4,
                            Condition = 1,
                            Number = "108",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111109"),
                            Capacity = 4,
                            Condition = 3,
                            Number = "109",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111110"),
                            Capacity = 4,
                            Condition = 0,
                            Number = "110",
                            Type = 2
                        });
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.ReservationRoom", b =>
                {
                    b.HasOne("GestionHotel.Domain.Entities.Reservation", "Reservation")
                        .WithMany("ReservationRooms")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionHotel.Domain.Entities.Room", "Room")
                        .WithMany("ReservationRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.Reservation", b =>
                {
                    b.Navigation("ReservationRooms");
                });

            modelBuilder.Entity("GestionHotel.Domain.Entities.Room", b =>
                {
                    b.Navigation("ReservationRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
